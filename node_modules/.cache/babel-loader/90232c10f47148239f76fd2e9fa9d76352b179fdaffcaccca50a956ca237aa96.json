{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate,useParams}from'react-router-dom';import axios from'axios';import Homepage from'./HomePage';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const Quiz=()=>{const navigate=useNavigate();const{code,heading}=useParams();const[quizzes,setQuizzes]=useState([]);const[questions,setQuestions]=useState([]);const[selectedOptions,setSelectedOptions]=useState({});// State to store selected options\nuseEffect(()=>{const fetchQuizzes=async()=>{try{const response=await axios.get(\"https://aimlbackend.onrender.com/quiz/\".concat(code,\"/\").concat(heading));const generatedQuestions=response.data.quizzes.map(quiz=>({...quiz,selectedOption:'',isCorrect:null,correctOption:quiz.answer// Add correct option to the question object\n}));setQuizzes(generatedQuestions);setQuestions(generatedQuestions);}catch(error){console.log(error);}};fetchQuizzes();},[code,heading]);const handleOptionClick=(questionIndex,option)=>{const updatedQuestions=[...questions];updatedQuestions[questionIndex].selectedOption=option;// Update selected option\nupdatedQuestions[questionIndex].isCorrect=option===quizzes[questionIndex].answer;// Determine correctness\nsetQuestions(updatedQuestions);setSelectedOptions({...selectedOptions,[questionIndex]:option});// Store selected option\n};// Calculate correct and wrong counts\nconst correctCount=Object.values(selectedOptions).filter(option=>option===quizzes[Object.keys(selectedOptions)[0]].answer).length;// Count correct options\nconst wrongCount=Object.values(selectedOptions).filter(option=>option!==quizzes[Object.keys(selectedOptions)[0]].answer).length;// Count wrong options\nconst redirectToResults=()=>{navigate(\"/results/\".concat(code,\"/\").concat(heading),{state:{questions,correctCount,wrongCount}});};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Homepage,{showPlusIcon:false}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"max-w-4xl mx-auto p-8\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-8 rounded-lg shadow-md\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"mt-4\",children:quizzes.map((question,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-4 rounded-lg shadow-md mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-bold text-lg mb-2\",children:question.question_statement}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"The options are:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col\",children:[question.options.map((option,optionIndex)=>/*#__PURE__*/_jsxs(\"label\",{className:\"inline-flex items-center mt-3\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",className:\"form-radio h-5 w-5 text-zinc-600\",name:\"question-\".concat(index,\"-option\"),value:option,checked:selectedOptions[index]===option,onChange:()=>handleOptionClick(index,option)}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 text-zinc-700 \".concat(selectedOptions[index]===option?quizzes[index].answer===option?'text-green-500':'text-red-500':''),children:option})]},optionIndex)),/*#__PURE__*/_jsxs(\"label\",{className:\"inline-flex items-center mt-3\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",className:\"form-radio h-5 w-5 text-zinc-600\",name:\"question-\".concat(index,\"-option\"),value:question.correctOption,checked:selectedOptions[index]===question.correctOption,onChange:()=>handleOptionClick(index,question.correctOption)}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 text-zinc-700 \".concat(selectedOptions[index]===question.correctOption?'text-green-500':''),children:question.correctOption})]},\"correct\")]})]})]},index))}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{onClick:redirectToResults,className:\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full w-full mb-4\",children:\"Show Results\"})})]})})})]});};export default Quiz;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","axios","Homepage","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Quiz","navigate","code","heading","quizzes","setQuizzes","questions","setQuestions","selectedOptions","setSelectedOptions","fetchQuizzes","response","get","concat","generatedQuestions","data","map","quiz","selectedOption","isCorrect","correctOption","answer","error","console","log","handleOptionClick","questionIndex","option","updatedQuestions","correctCount","Object","values","filter","keys","length","wrongCount","redirectToResults","state","children","showPlusIcon","className","question","index","question_statement","options","optionIndex","type","name","value","checked","onChange","onClick"],"sources":["C:/Users/Dell/OneDrive/Desktop/Demo/miniprojectsem6/src/Components/Quiz.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Homepage from './HomePage';\r\n\r\nconst Quiz = () => {\r\n    const navigate = useNavigate();\r\n    const { code, heading } = useParams();\r\n    const [quizzes, setQuizzes] = useState([]);\r\n    const [questions, setQuestions] = useState([]);\r\n    const [selectedOptions, setSelectedOptions] = useState({}); // State to store selected options\r\n\r\n    useEffect(() => {\r\n        const fetchQuizzes = async () => {\r\n            try {\r\n                const response = await axios.get(`https://aimlbackend.onrender.com/quiz/${code}/${heading}`);\r\n                const generatedQuestions = response.data.quizzes.map(quiz => ({\r\n                    ...quiz,\r\n                    selectedOption: '',\r\n                    isCorrect: null,\r\n                    correctOption: quiz.answer // Add correct option to the question object\r\n                }));\r\n                setQuizzes(generatedQuestions);\r\n                setQuestions(generatedQuestions);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n        fetchQuizzes();\r\n    }, [code, heading]);\r\n\r\n    const handleOptionClick = (questionIndex, option) => {\r\n        const updatedQuestions = [...questions];\r\n        updatedQuestions[questionIndex].selectedOption = option; // Update selected option\r\n        updatedQuestions[questionIndex].isCorrect = option === quizzes[questionIndex].answer; // Determine correctness\r\n        setQuestions(updatedQuestions);\r\n        setSelectedOptions({...selectedOptions, [questionIndex]: option}); // Store selected option\r\n    };\r\n\r\n    // Calculate correct and wrong counts\r\n    const correctCount = Object.values(selectedOptions).filter(option => option === quizzes[Object.keys(selectedOptions)[0]].answer).length; // Count correct options\r\n    const wrongCount = Object.values(selectedOptions).filter(option => option !== quizzes[Object.keys(selectedOptions)[0]].answer).length ; // Count wrong options\r\n\r\n    const redirectToResults = () => {\r\n        navigate(`/results/${code}/${heading}`, { state: { questions, correctCount, wrongCount } });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Homepage showPlusIcon={false} />\r\n            <div>\r\n                <div className=\"max-w-4xl mx-auto p-8\">\r\n                    <div className=\"bg-white p-8 rounded-lg shadow-md\">\r\n                        <div className=\"mt-4\">\r\n                            {quizzes.map((question, index) => (\r\n                                <div key={index} className=\"bg-white p-4 rounded-lg shadow-md mb-4\">\r\n                                    <h3 className=\"font-bold text-lg mb-2\">{question.question_statement}</h3>\r\n                                    <div className=\"mt-4\">\r\n                                        <p>The options are:</p>\r\n                                        <div className=\"flex flex-col\">\r\n                                            {question.options.map((option, optionIndex) => (\r\n                                                <label key={optionIndex} className=\"inline-flex items-center mt-3\">\r\n                                                    <input\r\n                                                        type=\"radio\"\r\n                                                        className=\"form-radio h-5 w-5 text-zinc-600\"\r\n                                                        name={`question-${index}-option`}\r\n                                                        value={option}\r\n                                                        checked={selectedOptions[index] === option}\r\n                                                        onChange={() => handleOptionClick(index, option)}\r\n                                                    />\r\n                                                    <span className={`ml-2 text-zinc-700 ${selectedOptions[index] === option ? (quizzes[index].answer === option ? 'text-green-500' : 'text-red-500') : ''}`}>\r\n                                                        {option}\r\n                                                    </span>\r\n                                                </label>\r\n                                            ))}\r\n                                            {/* Include correct option */}\r\n                                            <label key=\"correct\" className=\"inline-flex items-center mt-3\">\r\n                                                <input\r\n                                                    type=\"radio\"\r\n                                                    className=\"form-radio h-5 w-5 text-zinc-600\"\r\n                                                    name={`question-${index}-option`}\r\n                                                    value={question.correctOption}\r\n                                                    checked={selectedOptions[index] === question.correctOption}\r\n                                                    onChange={() => handleOptionClick(index, question.correctOption)}\r\n                                                />\r\n                                                <span className={`ml-2 text-zinc-700 ${selectedOptions[index] === question.correctOption ? 'text-green-500' : ''}`}>\r\n                                                    {question.correctOption}\r\n                                                </span>\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <div>\r\n                            <button onClick={redirectToResults} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full w-full mb-4\">\r\n                                Show Results\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Quiz;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}