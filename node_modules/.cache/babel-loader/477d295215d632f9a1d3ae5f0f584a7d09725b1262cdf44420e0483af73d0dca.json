{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\Demo\\\\miniprojectsem6\\\\src\\\\Components\\\\QuizGenerator.jsx\",\n  _s = $RefreshSig$();\n// QuizGenerator.js\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizGenerator() {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const handleCreateQuiz = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/generate_questions', {\n        input_text: inputText\n      });\n      setQuestions(response.data.questions.map(question => ({\n        ...question,\n        selectedOption: '',\n        isCorrect: null\n      })));\n    } catch (error) {\n      console.error('Error generating quiz:', error);\n    }\n  };\n  const handleInputChange = event => {\n    setInputText(event.target.value);\n  };\n  const handleOptionClick = (questionIndex, option) => {\n    const updatedQuestions = [...questions];\n    const question = updatedQuestions[questionIndex];\n    if (question.selectedOption === '') {\n      question.selectedOption = option;\n      question.isCorrect = option === question.answer;\n    }\n    setQuestions(updatedQuestions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Quiz Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"4\",\n      cols: \"50\",\n      value: inputText,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        display: 'block',\n        margin: '10px auto'\n      },\n      onClick: handleCreateQuiz,\n      children: \"Create Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginBottom: '10px'\n          },\n          children: question.question_statement\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: question.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleOptionClick(index, option),\n            style: {\n              color: question.isCorrect !== null ? option === question.answer ? 'green' : option === question.selectedOption ? 'red' : 'black' : 'black',\n              cursor: question.isCorrect !== null ? 'not-allowed' : 'pointer',\n              backgroundColor: question.isCorrect !== null && option === question.answer ? '#e6ffe6' : '',\n              padding: '5px',\n              marginBottom: '5px'\n            },\n            children: option\n          }, optionIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), question.isCorrect !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'green'\n          },\n          children: [\"Correct Answer: \", question.answer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(QuizGenerator, \"1wK8npqPv33H+XOh5kvikjkdyaQ=\");\n_c = QuizGenerator;\nexport default QuizGenerator;\nvar _c;\n$RefreshReg$(_c, \"QuizGenerator\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","QuizGenerator","_s","inputText","setInputText","questions","setQuestions","handleCreateQuiz","response","post","input_text","data","map","question","selectedOption","isCorrect","error","console","handleInputChange","event","target","value","handleOptionClick","questionIndex","option","updatedQuestions","answer","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","rows","cols","onChange","display","margin","onClick","index","marginBottom","question_statement","options","optionIndex","color","cursor","backgroundColor","padding","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/Demo/miniprojectsem6/src/Components/QuizGenerator.jsx"],"sourcesContent":["// QuizGenerator.js\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction QuizGenerator() {\r\n    const [inputText, setInputText] = useState('');\r\n    const [questions, setQuestions] = useState([]);\r\n\r\n    const handleCreateQuiz = async () => {\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/generate_questions', { input_text: inputText });\r\n            setQuestions(response.data.questions.map(question => ({ ...question, selectedOption: '', isCorrect: null })));\r\n        } catch (error) {\r\n            console.error('Error generating quiz:', error);\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (event) => {\r\n        setInputText(event.target.value);\r\n    };\r\n\r\n    const handleOptionClick = (questionIndex, option) => {\r\n        const updatedQuestions = [...questions];\r\n        const question = updatedQuestions[questionIndex];\r\n        if (question.selectedOption === '') {\r\n            question.selectedOption = option;\r\n            question.isCorrect = option === question.answer;\r\n        }\r\n        setQuestions(updatedQuestions);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1 style={{ textAlign: 'center' }}>Quiz Generator</h1>\r\n            <textarea rows=\"4\" cols=\"50\" value={inputText} onChange={handleInputChange}></textarea>\r\n            <button style={{ display: 'block', margin: '10px auto' }} onClick={handleCreateQuiz}>Create Quiz</button>\r\n            <div>\r\n                {questions.map((question, index) => (\r\n                    <div key={index} style={{ marginBottom: '20px' }}>\r\n                        <h3 style={{ marginBottom: '10px' }}>{question.question_statement}</h3>\r\n                        <ul>\r\n                            {question.options.map((option, optionIndex) => (\r\n                                <li\r\n                                    key={optionIndex}\r\n                                    onClick={() => handleOptionClick(index, option)}\r\n                                    style={{\r\n                                        color: question.isCorrect !== null ? (\r\n                                            option === question.answer ? 'green' : (option === question.selectedOption ? 'red' : 'black')\r\n                                        ) : 'black',\r\n                                        cursor: question.isCorrect !== null ? 'not-allowed' : 'pointer',\r\n                                        backgroundColor: question.isCorrect !== null && option === question.answer ? '#e6ffe6' : '',\r\n                                        padding: '5px',\r\n                                        marginBottom: '5px'\r\n                                    }}\r\n                                >\r\n                                    {option}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                        {question.isCorrect !== null && (\r\n                            <p style={{ color: 'green' }}>Correct Answer: {question.answer}</p>\r\n                        )}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QuizGenerator;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}