{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\Demo\\\\miniprojectsem6\\\\src\\\\Components\\\\Quiz.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport Homepage from './HomePage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    code,\n    heading\n  } = useParams();\n  const [quizzes, setQuizzes] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [selectedOptions, setSelectedOptions] = useState({}); // State to store selected options\n\n  useEffect(() => {\n    const fetchQuizzes = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8000/quiz/${code}/${heading}`);\n        setQuizzes(response.data.quizzes);\n        setQuestions(response.data.quizzes.map(quiz => ({\n          ...quiz,\n          selectedOption: '',\n          isCorrect: null\n        })));\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchQuizzes();\n  }, [code, heading]);\n  const handleOptionClick = (questionIndex, option) => {\n    const updatedQuestions = [...questions];\n    updatedQuestions[questionIndex].selectedOption = option; // Update selected option\n    updatedQuestions[questionIndex].isCorrect = option === quizzes[questionIndex].answer; // Determine correctness\n    setQuestions(updatedQuestions);\n    setSelectedOptions({\n      ...selectedOptions,\n      [questionIndex]: option\n    }); // Store selected option\n  };\n  const correctCount = Object.values(selectedOptions).filter(option => option === true).length; // Count correct options\n  const wrongCount = Object.values(selectedOptions).filter(option => option === false).length; // Count wrong options\n\n  const redirectToResults = () => {\n    navigate(`/results/${code}/${heading}`, {\n      state: {\n        questions,\n        correctCount,\n        wrongCount\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Homepage, {\n      showPlusIcon: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-4xl mx-auto p-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-8 rounded-lg shadow-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: quizzes.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-white p-4 rounded-lg shadow-md mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"font-bold text-lg mb-2\",\n                children: question.question_statement\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"The options are:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex flex-col\",\n                  children: question.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"inline-flex items-center mt-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"radio\",\n                      className: \"form-radio h-5 w-5 text-zinc-600\",\n                      name: `question-${index}-option`,\n                      value: option,\n                      onChange: () => handleOptionClick(index, option)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 56,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `ml-2 text-zinc-700 ${selectedOptions[index] === option ? quizzes[index].answer === option ? 'text-green-500' : 'text-red-500' : ''}`,\n                      children: option\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 63,\n                      columnNumber: 53\n                    }, this)]\n                  }, optionIndex, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 49\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: redirectToResults,\n              className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full w-full mb-4\",\n              children: \"Show Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Quiz, \"RN1JDtxtFy8JZ7ZgyI0Amt3hCFo=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","axios","Homepage","jsxDEV","_jsxDEV","Fragment","_Fragment","Quiz","_s","navigate","code","heading","quizzes","setQuizzes","questions","setQuestions","selectedOptions","setSelectedOptions","fetchQuizzes","response","get","data","map","quiz","selectedOption","isCorrect","error","console","log","handleOptionClick","questionIndex","option","updatedQuestions","answer","correctCount","Object","values","filter","length","wrongCount","redirectToResults","state","children","showPlusIcon","fileName","_jsxFileName","lineNumber","columnNumber","className","question","index","question_statement","options","optionIndex","type","name","value","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/Demo/miniprojectsem6/src/Components/Quiz.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Homepage from './HomePage';\r\n\r\nconst Quiz = () => {\r\n    const navigate = useNavigate();\r\n    const { code, heading } = useParams();\r\n    const [quizzes, setQuizzes] = useState([]);\r\n    const [questions, setQuestions] = useState([]);\r\n    const [selectedOptions, setSelectedOptions] = useState({}); // State to store selected options\r\n\r\n    useEffect(() => {\r\n        const fetchQuizzes = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:8000/quiz/${code}/${heading}`);\r\n                setQuizzes(response.data.quizzes);\r\n                setQuestions(response.data.quizzes.map(quiz => ({ ...quiz, selectedOption: '', isCorrect: null })));\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n        fetchQuizzes();\r\n    }, [code, heading]);\r\n\r\n    const handleOptionClick = (questionIndex, option) => {\r\n        const updatedQuestions = [...questions];\r\n        updatedQuestions[questionIndex].selectedOption = option; // Update selected option\r\n        updatedQuestions[questionIndex].isCorrect = option === quizzes[questionIndex].answer; // Determine correctness\r\n        setQuestions(updatedQuestions);\r\n        setSelectedOptions({...selectedOptions, [questionIndex]: option}); // Store selected option\r\n    };\r\n\r\n    const correctCount = Object.values(selectedOptions).filter(option => option === true).length; // Count correct options\r\n    const wrongCount = Object.values(selectedOptions).filter(option => option === false).length; // Count wrong options\r\n\r\n    const redirectToResults = () => {\r\n        navigate(`/results/${code}/${heading}`, { state: { questions, correctCount, wrongCount } });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Homepage showPlusIcon={false} />\r\n            <div>\r\n                <div className=\"max-w-4xl mx-auto p-8\">\r\n                    <div className=\"bg-white p-8 rounded-lg shadow-md\">\r\n                        <div className=\"mt-4\">\r\n                            {quizzes.map((question, index) => (\r\n                                <div key={index} className=\"bg-white p-4 rounded-lg shadow-md mb-4\">\r\n                                    <h3 className=\"font-bold text-lg mb-2\">{question.question_statement}</h3>\r\n                                    <div className=\"mt-4\">\r\n                                        <p>The options are:</p>\r\n                                        <div className=\"flex flex-col\">\r\n                                            {question.options.map((option, optionIndex) => (\r\n                                                <label key={optionIndex} className=\"inline-flex items-center mt-3\">\r\n                                                    <input\r\n                                                        type=\"radio\"\r\n                                                        className=\"form-radio h-5 w-5 text-zinc-600\"\r\n                                                        name={`question-${index}-option`}\r\n                                                        value={option}\r\n                                                        onChange={() => handleOptionClick(index, option)}\r\n                                                    />\r\n                                                    <span className={`ml-2 text-zinc-700 ${selectedOptions[index] === option ? (quizzes[index].answer === option ? 'text-green-500' : 'text-red-500') : ''}`}>\r\n                                                        {option}\r\n                                                    </span>\r\n                                                </label>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <div>\r\n                            <button onClick={redirectToResults} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full w-full mb-4\">\r\n                                Show Results\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Quiz;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}