{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\Demo\\\\miniprojectsem6\\\\src\\\\Components\\\\Results.jsx\",\n  _s = $RefreshSig$();\n// Results.js\n\nimport React from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport Homepage from './HomePage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Results = () => {\n  _s();\n  const {\n    code,\n    heading\n  } = useParams();\n  const location = useLocation();\n  const {\n    questions,\n    selectedOptions\n  } = location.state; // Access selectedOptions from location state\n\n  const {\n    correctCount,\n    wrongCount\n  } = calculateResults();\n  function calculateResults() {\n    let correctCount = 0;\n    let wrongCount = 0;\n    for (const questionIndex in selectedOptions) {\n      const option = selectedOptions[questionIndex];\n      if (option === true) {\n        correctCount++;\n      } else if (option === false) {\n        wrongCount++;\n      }\n    }\n    return {\n      correctCount,\n      wrongCount\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Homepage, {\n      showPlusIcon: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto p-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-8 rounded-lg shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-bold text-2xl mb-6\",\n          children: \"Quiz Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Classroom Code: \", code]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Heading: \", heading]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Number of Correct Answers: \", correctCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Number of Wrong Answers: \", wrongCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white p-4 rounded-lg shadow-md mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-bold text-lg mb-2\",\n              children: question.question_statement\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"The options are:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-col\",\n                children: question.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"inline-flex items-center mt-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    className: \"form-radio h-5 w-5 text-zinc-600\",\n                    name: `question-${index}-option`,\n                    value: option,\n                    checked: selectedOptions[index] === option,\n                    disabled: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `ml-2 text-zinc-700 ${selectedOptions[index] === option ? question.correctOption === option ? 'text-green-500' : 'text-red-500' : ''}`,\n                    children: option\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 49\n                  }, this)]\n                }, optionIndex, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Results, \"tidBSpWi6OFLfa4cHtXaX612DXM=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","useLocation","useParams","Homepage","jsxDEV","_jsxDEV","Fragment","_Fragment","Results","_s","code","heading","location","questions","selectedOptions","state","correctCount","wrongCount","calculateResults","questionIndex","option","children","showPlusIcon","fileName","_jsxFileName","lineNumber","columnNumber","className","map","question","index","question_statement","options","optionIndex","type","name","value","checked","disabled","correctOption","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/Demo/miniprojectsem6/src/Components/Results.jsx"],"sourcesContent":["// Results.js\r\n\r\nimport React from 'react';\r\nimport { useLocation, useParams } from 'react-router-dom';\r\nimport Homepage from './HomePage';\r\n\r\nconst Results = () => {\r\n    const { code, heading } = useParams();\r\n    const location = useLocation();\r\n    const { questions, selectedOptions } = location.state; // Access selectedOptions from location state\r\n\r\n    const { correctCount, wrongCount } = calculateResults();\r\n\r\n    function calculateResults() {\r\n        let correctCount = 0;\r\n        let wrongCount = 0;\r\n        for (const questionIndex in selectedOptions) {\r\n            const option = selectedOptions[questionIndex];\r\n            if (option === true) {\r\n                correctCount++;\r\n            } else if (option === false) {\r\n                wrongCount++;\r\n            }\r\n        }\r\n        return { correctCount, wrongCount };\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Homepage showPlusIcon={false} />\r\n            <div className=\"max-w-4xl mx-auto p-8\">\r\n                <div className=\"bg-white p-8 rounded-lg shadow-md\">\r\n                    <h2 className=\"font-bold text-2xl mb-6\">Quiz Results</h2>\r\n                    <p>Classroom Code: {code}</p>\r\n                    <p>Heading: {heading}</p>\r\n                    <p>Number of Correct Answers: {correctCount}</p>\r\n                    <p>Number of Wrong Answers: {wrongCount}</p>\r\n                    <div className=\"mt-4\">\r\n                        {questions.map((question, index) => (\r\n                            <div key={index} className=\"bg-white p-4 rounded-lg shadow-md mb-4\">\r\n                                <h3 className=\"font-bold text-lg mb-2\">{question.question_statement}</h3>\r\n                                <div className=\"mt-4\">\r\n                                    <p>The options are:</p>\r\n                                    <div className=\"flex flex-col\">\r\n                                        {question.options.map((option, optionIndex) => (\r\n                                            <label key={optionIndex} className=\"inline-flex items-center mt-3\">\r\n                                                <input\r\n                                                    type=\"radio\"\r\n                                                    className=\"form-radio h-5 w-5 text-zinc-600\"\r\n                                                    name={`question-${index}-option`}\r\n                                                    value={option}\r\n                                                    checked={selectedOptions[index] === option}\r\n                                                    disabled\r\n                                                />\r\n                                                <span className={`ml-2 text-zinc-700 ${selectedOptions[index] === option ? (question.correctOption === option ? 'text-green-500' : 'text-red-500') : ''}`}>\r\n                                                    {option}\r\n                                                </span>\r\n                                            </label>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Results;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}