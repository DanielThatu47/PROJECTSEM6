{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\Demo\\\\miniprojectsem6\\\\src\\\\Components\\\\Quiz.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport Homepage from './HomePage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const {\n    code,\n    heading\n  } = useParams();\n  const [quizzes, setQuizzes] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [selectedOptions, setSelectedOptions] = useState({}); // State to store selected options\n\n  useEffect(() => {\n    const fetchQuizzes = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8000/quiz/${code}/${heading}`);\n        setQuizzes(response.data.quizzes);\n        setQuestions(response.data.quizzes.map(quiz => ({\n          ...quiz,\n          selectedOption: '',\n          isCorrect: null\n        })));\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchQuizzes();\n  }, [code, heading]);\n  const handleOptionClick = (questionIndex, option) => {\n    const updatedQuestions = [...questions];\n    updatedQuestions[questionIndex].selectedOption = option; // Update selected option\n    updatedQuestions[questionIndex].isCorrect = option === quizzes[questionIndex].answer; // Determine correctness\n    setQuestions(updatedQuestions);\n    setSelectedOptions({\n      ...selectedOptions,\n      [questionIndex]: option\n    }); // Store selected option\n  };\n  const correctCount = Object.values(selectedOptions).filter(option => option === true).length; // Count correct options\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Homepage, {\n      showPlusIcon: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-4xl mx-auto p-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-8 rounded-lg shadow-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-white p-4 rounded-lg shadow-md mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"font-bold text-lg mb-2\",\n                children: question.question_statement\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"The options are:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex flex-col\",\n                  children: question.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"inline-flex items-center mt-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"radio\",\n                      className: \"form-radio h-5 w-5 text-zinc-600\",\n                      name: `question-${index}-option`,\n                      value: option,\n                      onChange: () => handleOptionClick(index, option)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 50,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"ml-2 text-zinc-700\",\n                      children: option\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 57,\n                      columnNumber: 53\n                    }, this)]\n                  }, optionIndex, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 49,\n                    columnNumber: 49\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Number of correct options: \", correctCount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Quiz, \"VyDD5Af/dBo4mC0oCulj7ox2K7k=\", false, function () {\n  return [useParams];\n});\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","Homepage","jsxDEV","_jsxDEV","Fragment","_Fragment","Quiz","_s","code","heading","quizzes","setQuizzes","questions","setQuestions","selectedOptions","setSelectedOptions","fetchQuizzes","response","get","data","map","quiz","selectedOption","isCorrect","error","console","log","handleOptionClick","questionIndex","option","updatedQuestions","answer","correctCount","Object","values","filter","length","children","showPlusIcon","fileName","_jsxFileName","lineNumber","columnNumber","className","question","index","question_statement","options","optionIndex","type","name","value","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/Demo/miniprojectsem6/src/Components/Quiz.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Homepage from './HomePage';\r\n\r\nconst Quiz = () => {\r\n    const { code, heading } = useParams();\r\n    const [quizzes, setQuizzes] = useState([]);\r\n    const [questions, setQuestions] = useState([]);\r\n    const [selectedOptions, setSelectedOptions] = useState({}); // State to store selected options\r\n\r\n    useEffect(() => {\r\n        const fetchQuizzes = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:8000/quiz/${code}/${heading}`);\r\n                setQuizzes(response.data.quizzes);\r\n                setQuestions(response.data.quizzes.map(quiz => ({ ...quiz, selectedOption: '', isCorrect: null })));\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n        fetchQuizzes();\r\n    }, [code, heading]);\r\n\r\n    const handleOptionClick = (questionIndex, option) => {\r\n        const updatedQuestions = [...questions];\r\n        updatedQuestions[questionIndex].selectedOption = option; // Update selected option\r\n        updatedQuestions[questionIndex].isCorrect = option === quizzes[questionIndex].answer; // Determine correctness\r\n        setQuestions(updatedQuestions);\r\n        setSelectedOptions({...selectedOptions, [questionIndex]: option}); // Store selected option\r\n    };\r\n\r\n    const correctCount = Object.values(selectedOptions).filter(option => option === true).length; // Count correct options\r\n\r\n    return (\r\n        <>\r\n            <Homepage showPlusIcon={false} />\r\n            <div>\r\n                <div className=\"max-w-4xl mx-auto p-8\">\r\n                    <div className=\"bg-white p-8 rounded-lg shadow-md\">\r\n                        <div className=\"mt-4\">\r\n                            {questions.map((question, index) => (\r\n                                <div key={index} className=\"bg-white p-4 rounded-lg shadow-md mb-4\">\r\n                                    <h3 className=\"font-bold text-lg mb-2\">{question.question_statement}</h3>\r\n                                    <div className=\"mt-4\">\r\n                                        <p>The options are:</p>\r\n                                        <div className=\"flex flex-col\">\r\n                                            {question.options.map((option, optionIndex) => (\r\n                                                <label key={optionIndex} className=\"inline-flex items-center mt-3\">\r\n                                                    <input\r\n                                                        type=\"radio\"\r\n                                                        className=\"form-radio h-5 w-5 text-zinc-600\"\r\n                                                        name={`question-${index}-option`}\r\n                                                        value={option}\r\n                                                        onChange={() => handleOptionClick(index, option)}\r\n                                                    />\r\n                                                    <span className=\"ml-2 text-zinc-700\">{option}</span>\r\n                                                </label>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <div>\r\n                            <p>Number of correct options: {correctCount}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Quiz;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}