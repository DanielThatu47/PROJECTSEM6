{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\Demo\\\\miniprojectsem6\\\\src\\\\Components\\\\QuizGenerator.jsx\",\n  _s = $RefreshSig$();\n// QuizGenerator.js\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizGenerator() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const handleCreateQuiz = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/test');\n      setQuestions(response.data.questions);\n    } catch (error) {\n      console.error('Error generating quiz:', error);\n    }\n  };\n  const handleAnswerSelection = async (questionId, selectedOption) => {\n    try {\n      const response = await axios.post('http://localhost:5000/check_answer', {\n        user_answer: selectedOption,\n        question_id: questionId\n      });\n      const updatedQuestions = questions.map(question => {\n        if (question.id === questionId) {\n          return {\n            ...question,\n            selectedOption,\n            isCorrect: response.data.is_correct,\n            correctAnswer: response.data.correct_answer\n          };\n        }\n        return question;\n      });\n      setQuestions(updatedQuestions);\n    } catch (error) {\n      console.error('Error checking answer:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateQuiz,\n      children: \"Create Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: question.question_statement\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: question.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              color: question.selectedOption === option ? question.isCorrect ? 'green' : 'red' : 'black'\n            },\n            onClick: () => handleAnswerSelection(question.id, option),\n            children: option\n          }, optionIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), question.selectedOption && !question.isCorrect && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The correct answer is: \", question.correctAnswer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(QuizGenerator, \"bGJpJfCjAm0mXGpMC+11bDyoUr4=\");\n_c = QuizGenerator;\nexport default QuizGenerator;\nvar _c;\n$RefreshReg$(_c, \"QuizGenerator\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","QuizGenerator","_s","questions","setQuestions","handleCreateQuiz","response","get","data","error","console","handleAnswerSelection","questionId","selectedOption","post","user_answer","question_id","updatedQuestions","map","question","id","isCorrect","is_correct","correctAnswer","correct_answer","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","index","question_statement","options","option","optionIndex","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/Demo/miniprojectsem6/src/Components/QuizGenerator.jsx"],"sourcesContent":["// QuizGenerator.js\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction QuizGenerator() {\r\n    const [questions, setQuestions] = useState([]);\r\n\r\n    const handleCreateQuiz = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:5000/test');\r\n            setQuestions(response.data.questions);\r\n        } catch (error) {\r\n            console.error('Error generating quiz:', error);\r\n        }\r\n    };\r\n\r\n    const handleAnswerSelection = async (questionId, selectedOption) => {\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/check_answer', {\r\n                user_answer: selectedOption,\r\n                question_id: questionId\r\n            });\r\n            const updatedQuestions = questions.map(question => {\r\n                if (question.id === questionId) {\r\n                    return {\r\n                        ...question,\r\n                        selectedOption,\r\n                        isCorrect: response.data.is_correct,\r\n                        correctAnswer: response.data.correct_answer\r\n                    };\r\n                }\r\n                return question;\r\n            });\r\n            setQuestions(updatedQuestions);\r\n        } catch (error) {\r\n            console.error('Error checking answer:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Quiz Generator</h1>\r\n            <button onClick={handleCreateQuiz}>Create Quiz</button>\r\n            <div>\r\n                {questions.map((question, index) => (\r\n                    <div key={index}>\r\n                        <h3>{question.question_statement}</h3>\r\n                        <ul>\r\n                            {question.options.map((option, optionIndex) => (\r\n                                <li\r\n                                    key={optionIndex}\r\n                                    style={{ color: question.selectedOption === option ? (question.isCorrect ? 'green' : 'red') : 'black' }}\r\n                                    onClick={() => handleAnswerSelection(question.id, option)}\r\n                                >\r\n                                    {option}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                        {question.selectedOption && !question.isCorrect && (\r\n                            <p>The correct answer is: {question.correctAnswer}</p>\r\n                        )}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QuizGenerator;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}